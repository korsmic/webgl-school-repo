import{V as h,W as c,C as A,S as d,P as l,D as w,a as M,A as p,M as L,b as a,c as g,d as m,G as P,B as R,O as u}from"./OrbitControls.54563765.js";class t{static get CAMERA_PARAM(){return{fovy:30,aspect:window.innerWidth/window.innerHeight,near:.1,far:30,x:11,y:4,z:3,lookAt:new h(0,0,1)}}static get RENDERER_PARAM(){return{clearColor:0,width:window.innerWidth,height:window.innerHeight}}static get DIRECTIONAL_LIGHT_PARAM(){return{color:16777215,intensity:.3,x:.5,y:.3,z:.5}}static get SPOT_LIGHT_PARAM(){return{color:16777215,intensity:1,distance:30,angle:Math.PI/4,penumbra:1}}static get AMBIENT_LIGHT_PARAM(){return{color:16777215,intensity:.03}}static get MATERIAL_PARAM(){return{clearcoat:0,clearcoatRoughness:0,metalness:.5,roughness:0,color:302836,reflectivity:1}}scene;renderer;camera;directionalLight;spotLight;ambientLight;material;boxGeometry;boxArray;controls;axesHelper;isDown;boxGroup;meshFloor;scaleFactor;isGrowing;isRotaion;isScale;direction;speed;constructor(){this.scaleFactor=.5,this.isGrowing=!0,this.isRotaion=!1,this.isScale=!1,this.direction=1,this.speed=.005,this.render=this.render.bind(this),document.querySelector("#rotaion").addEventListener("click",e=>{this.isRotaion=!this.isRotaion,e.target.classList.toggle("is-active")}),document.querySelector("#scale").addEventListener("click",e=>{this.isScale=!this.isScale,e.target.classList.toggle("is-active")}),window.addEventListener("resize",()=>{this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()},!1)}init(){this.renderer=new c,this.renderer.setClearColor(new A(t.RENDERER_PARAM.clearColor)),this.renderer.setSize(t.RENDERER_PARAM.width,t.RENDERER_PARAM.height),this.renderer.shadowMap.enabled=!0,document.querySelector("#webgl").appendChild(this.renderer.domElement),this.scene=new d,this.camera=new l(t.CAMERA_PARAM.fovy,t.CAMERA_PARAM.aspect,t.CAMERA_PARAM.near,t.CAMERA_PARAM.far),this.camera.position.set(t.CAMERA_PARAM.x,t.CAMERA_PARAM.y,t.CAMERA_PARAM.z),this.camera.lookAt(t.CAMERA_PARAM.lookAt),this.directionalLight=new w(t.DIRECTIONAL_LIGHT_PARAM.color,t.DIRECTIONAL_LIGHT_PARAM.intensity),this.directionalLight.position.set(t.DIRECTIONAL_LIGHT_PARAM.x,t.DIRECTIONAL_LIGHT_PARAM.y,t.DIRECTIONAL_LIGHT_PARAM.z),this.scene.add(this.directionalLight),this.spotLight=new M(t.SPOT_LIGHT_PARAM.color,t.SPOT_LIGHT_PARAM.intensity,t.SPOT_LIGHT_PARAM.distance,t.SPOT_LIGHT_PARAM.angle,t.SPOT_LIGHT_PARAM.penumbra),this.spotLight.castShadow=!0,this.spotLight.position.set(0,4,0),this.spotLight.shadow.mapSize.width=2048,this.spotLight.shadow.mapSize.height=2048,this.scene.add(this.spotLight),this.ambientLight=new p(t.AMBIENT_LIGHT_PARAM.color,t.AMBIENT_LIGHT_PARAM.intensity),this.scene.add(this.ambientLight),this.material=new L(t.MATERIAL_PARAM),this.meshFloor=new a(new g(100,100),new m),this.meshFloor.rotation.x-=Math.PI/2,this.meshFloor.position.y=-3,this.meshFloor.receiveShadow=!0,this.scene.add(this.meshFloor),this.boxGroup=new P;const s=50;this.boxArray=[];for(let i=1;i<=s;++i){const n=new R(i*.1,.1,i*.1),r=new a(n,this.material),o=new a(n,this.material);r.castShadow=!0,o.castShadow=!0,r.position.set(0,(s-i)*.1,0),o.position.set(0,(s-i)*-.1-.1,0),this.boxGroup.add(r),this.boxGroup.add(o),this.boxArray.push(r),this.boxArray.unshift(o)}this.boxGroup.scale.set(.5,.5,.5),this.scene.add(this.boxGroup),this.controls=new u(this.camera,this.renderer.domElement)}render(){requestAnimationFrame(this.render),this.controls.update(),this.isRotaion===!0&&this.boxArray.forEach((e,s)=>{s%2===0?e.rotation.y+=.05:e.rotation.y-=.05}),this.isScale===!0&&(this.boxArray.forEach(e=>{this.isGrowing?this.scaleFactor+=25e-5:this.scaleFactor-=25e-5,e.scale.set(this.scaleFactor,this.scaleFactor,this.scaleFactor)}),this.scaleFactor>=1?this.isGrowing=!1:this.scaleFactor<=.5&&(this.isGrowing=!0)),this.boxGroup.position.y+=this.speed*this.direction,this.boxGroup.rotation.y+=.005,(this.boxGroup.position.y>=.2||this.boxGroup.position.y<=-.2)&&(this.direction*=-1),this.renderer.render(this.scene,this.camera)}}window.addEventListener("DOMContentLoaded",E=>{const e=new t;e.init(),e.render()},!1);
